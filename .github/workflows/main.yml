name: CI Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  node-npm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [22.x]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Starting Node.js ${{matrix.node}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node}}
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{hashFiles('**/package-lock.json')}}
      - name: install modules
        run: npm install
#  linting:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node: [18.x, 20.x, 22.x]
#    needs: [ node-npm ]
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - name: Cache deps
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: node-modules-${{hashFiles('**/package-lock.json')}}
#      - name: install modules
#        run: npm install
#      - name: linting typescript
#        run: npm run lint:ts
#      - name: linting css
#        run: npm run lint:scss
#  unit-testing:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node: [18.x, 20.x, 22.x]
#    needs: [ node-npm ]
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - name: Cache deps
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: node-modules-${{hashFiles('**/package-lock.json')}}
#      - name: install modules
#        run: npm install
#      - name: unit testing
#        run: npm run test:unit
#  build-storybook:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node: [18.x, 20.x, 22.x]
#    needs: [ node-npm ]
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - name: Cache deps
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: node-modules-${{hashFiles('**/package-lock.json')}}
#      - name: install modules
#        run: npm install
#      - name: build storybook
#        run: npm run storybook:build
#  build-project:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node: [18.x, 20.x, 22.x]
#    needs: [ linting, unit-testing ]
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - name: Cache deps
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: node-modules-${{hashFiles('**/package-lock.json')}}
#      - name: install modules
#        run: npm install
#      - name: build production project
#        run: npm run build:prod
  screenshot-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18.x]
#    needs: [ build-storybook ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{hashFiles('**/package-lock.json')}}
      - name: install modules
        run: npm install
      - name: build storybook
        run: npm run storybook:build
      - name: screenshot testing
        run: npm run test:ui:ci
      - name: Upload Loki diff
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: loki-difference
          path: .loki/difference
